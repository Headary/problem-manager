@precedence { commandargument @left, character @left }

@top Document { (Text | InlineMath | Command | EqCommand | Newline | "[" | "]" |
"{" | "}" | Environment | ListEnvironment)* }

// MathCommandArgument is included to catch { math } groups
Math {
	!character (
		InlineMathContent |
		Command |
		UnderscoreCommand |
		MathCommandArgument |
		QuoteMacro |
		"[" | "]" | "{" | "}" |
		Whitespace |
		Number |
		Newline
	)*
}

InlineMath {
	"$" Math "$"
}

Command {
	CommandIdentifier (CommandArgument | CommandArgumentOptional)*
}

// command argument is included to catch { } groups
CommandArgument {
	!commandargument "{" (Text | InlineMath | Command | CommandArgument | Newline )* "}"
}

MathCommandArgument {
	!commandargument "{" Math "}"
}

CommandArgumentOptional {
	!commandargument "[" (Text | InlineMath | Command | Newline)* "]"
}

EqCommandIdentifier {
	@specialize<CommandIdentifier, "\\eq">
}

EqCommand {
	 EqCommandIdentifier CommandArgumentOptional? MathCommandArgument
}

UnderscoreCommand {
	@specialize<CommandIdentifier, "\\_"> (CommandArgument|Command|Singlechar)
}

QuoteMacro {
	"\"" Number ("e" Number)? (Whitespace Math)? "\""
}

EnvironmentNameArgument<name> {
	"{" name "}"
}

BeginCommandIdentifier {
	@specialize<CommandIdentifier, "\\begin">
}

BeginEnv<name> {
	BeginCommandIdentifier
	EnvironmentNameArgument<name>
	CommandArgumentOptional?
	CommandArgument*
}

EndCommandIdentifier {
	@specialize<CommandIdentifier, "\\end">
}

EndEnv<name> {
	EndCommandIdentifier
	EnvironmentNameArgument<name>
}

Environment {
	BeginEnv<EnvName>
	(Text | InlineMath | Command | EqCommand | Newline | Environment)*
	EndEnv<EnvName>
}

@external specialize {EnvName} specializeEnvName from "./tokenizer.ts" {
	ListEnvName
}

ListEnvironment {
	BeginEnv<ListEnvName>
	ListItem {
		@specialize<CommandIdentifier, "\\item">
		(Text | InlineMath | Command | EqCommand | Newline | Environment)*
	}+
	EndEnv<ListEnvName>
}

@skip { Comment }

@tokens {
	Text { (![\\${}\[\]%\n])+ }
	CommandIdentifier { "\\" ((@asciiLetter)+"*"?|"%"|"{"|"}"|"\\"|"_"|"("|")"|",") }
	InlineMathContent { (![\\${}\[\]\"%\n\t\r 0-9])+ }
	Comment { "%" ![\n]* }
	Newline { "\n" }
	Singlechar { @asciiLetter }
	Whitespace { ("\t"|"\r"|" ")+ }
	Number { ("+" | "-")? @digit+ ("~" @digit+)* ("," | ".")? @digit* ("~" @digit+)* }

	EnvName { @asciiLetter+ "*"? }

	// listing those characters to enable syntax highlighting
	"[" "]" "{" "}" "$" "\"" "e"

	@precedence {Number, InlineMathContent}
}
